:host {
  /* CSS vars
   * https://stackoverflow.com/questions/41950834/buttons-not-inheriting-parent-div-font-size
   * As stated above, form elements do not usually inherit stiles from the root of the element.
   * Therefore css vars are provided
   */
  /**
   * @prop --btn_font-style, --kup-button_font-style: Sets button font style.
   * @prop --btn_font-size, --kup-button_font-size: Sets button font size.
   * @prop --btn_font-weight, --kup-button_font-weight: Sets the font weight of the button
   * @prop --btn_font-family, --kup-button_font-family: sets the font family of the button
   * @prop --btn_icon-size, --kup-button_icon-size: Set icon size.
   * @prop --btn_main-color, --kup-button_main-color: Sets the main color of the button.
   * @prop --btn_text-color, --kup-button_text-color: Sets color of the button text.
   * @prop --btn_text-color--transparent, --kup-button_text-color--transparent: Sets text color when button is transparent.
   * @prop --btn_icon-color, --kup-button_icon-color: Sets icon color.
   * @prop --btn_icon--transparent, --kup-button_icon-color--transparent: Sets icon color when button is transparent.
   * @prop --btn_animation-duration, --kup-button_animation-duration: Sets duration of all transitions of the component.
   * @prop --btn_border-color, --kup-button_border-color: Sets border color of the button only when it is transparent.
   * @prop --btn_opacity, --kup-button_opacity: Sets opacity of the button.
   * @prop --btn_box-shadow, --kup-button_box-shadow: Sets hover box shadow of the button.
   * @prop --btn_border, --kup-button_border: Sets border of the button.
  */
  --btn_font-style: var(--kup-button_font-style, 'normal');
  --btn_font-size: var(--kup-button_font-size, 14px);
  --btn_font-weight: var(--kup-button_font-weight, 400);
  --btn_font-family: var(--kup-button_font-family, inherit);
  --btn_icon-size: var(--kup-button_icon-size, 18px);
  --btn_main-color: var(--kup-button_main-color, #{$smeup-primary});
  --btn_text-color: var(--kup-button_text-color, #ffffff);
  --btn_text-color--transparent: var(
    --kup-button_text-color--transparent,
    gray
  );
  --btn_text-decoration: var(--kup-button_text-decoration, 'none');
  --btn_icon-color: var(--kup-button_icon-color, #ffffff);
  --btn_icon--transparent: var(--kup-button_icon-color--transparent, gray);
  --btn_animation-duration: var(--kup-button_animation-duration, 0.3s);
  --btn_border-color: var(--kup-button_border-color, #{$smeup-primary});
  --btn_opacity: var(--kup-button_opacity, 1);
  --btn_box-shadow: var(
    --kup-button_box-shadow,
    0px 0px 7.5px 0px rgba(128, 128, 128, 0.5)
  );
  --btn_border: var(--kup-button_border, none);

  @include stateVars('--btn');
}

:host(.fillspace) {
  button {
    width: 100%;
  }
}

button {
  outline: none; //override browser
  opacity: var(--btn_opacity);
  background: var(--btn_main-color);
  border-radius: 2px;
  border: var(--btn_border);
  box-shadow: none;
  color: var(--btn_text-color);
  cursor: pointer;
  font-family: var(--btn_font-family);
  font-size: var(--btn_font-size);
  font-weight: var(--btn_font-weight);
  line-height: 30px;
  padding: 0px 8px;
  text-align: center;
  transition: box-shadow var(--btn_animation-duration), opacity 0.2s ease-in-out;
  white-space: nowrap;

  &:hover {
    box-shadow: var(--btn_box-shadow);
  }

  //-- The button icon --
  > .button-icon {
    display: block;
    color: var(--btn_icon-color);
    fill: var(--btn_icon-color);
    float: left;
    width: var(--btn_icon-size);
  }

  //-- The button text --
  > .button-text {
    font-style: var(--btn_font-style);
    text-decoration: var(--btn_text-decoration);
  }

  //-- Rounded --
  &.rounded {
    border-radius: 15px;
  }

  //-- Transparent button --
  &.transparent {
    background-color: transparent;
    border: 1px solid var(--btn_border-color);
    color: var(--btn_text-color--transparent);

    // When transparent, changes icon color
    > .button-icon {
      color: var(--btn_icon-color--transparent);
      fill: var(--btn_icon-color--transparent);
    }
  }

  //-- Standard classes for state --
  &.btn-info {
    background: var(--btn_color-info);
  }

  &.btn-danger {
    background: var(--btn_color-danger);

    &:hover {
      background: var(--btn_color-danger--hover);
    }
  }

  &.btn-warning {
    background: var(--btn_color-warning);
  }

  &.btn-selected {
    background: var(--btn_color-selected);
  }

  //-- Flat button --
  &.flat-btn {
    background: none;
    border: none;
    color: var(--btn_main-color);

    &:hover {
      box-shadow: none;
    }

    .button-text {
      text-decoration: underline;
    }

    // When transparent, changes icon color
    > .button-icon {
      color: var(--btn_main-color);
      fill: var(--btn_main-color);
    }
  }

  //-- Align --
  &.align-right {
    text-align: right;

    > .button-icon {
      float: right;
    }
  }

  &.align-left {
    text-align: left;
  }

  //-- Fillspace --
  &.fillspace {
    width: 100%;
  }
}
