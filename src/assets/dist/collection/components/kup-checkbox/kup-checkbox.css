/**
* @prop --checkbox_border-color, --kup-checkbox_border-color: Sets color of the border when checkbox is NOT disabled.
* @prop --checkbox_border-color-disabled, --kup-checkbox_border-color-disabled: Sets color of the border when checkbox IS disabled.
* @prop --checkbox_background-color, --kup-checkbox_background-color: Sets the background color of the checkbox
* @prop --checkbox_size, --kup-checkbox_size: Sets the component size; all other sizes are scaled automatically.
* @prop --checkbox_tick-color, --kup-checkbox_tick-color: Sets color of the tick of the checkbox.
* @prop --checkbox_tick-color-disabled, --kup-checkbox_tick-color-disabled: Sets color of the tick of the checkbox when checkbox is disabled.
*/
:host {
  --checkbox_border-color: var(--kup-checkbox_border-color, #808080);
  --checkbox_border-color-disabled: var(--kup-checkbox_border-color-disabled, #b3b3b3);
  --checkbox_background-color: var(--kup-checkbox_background-color, #f5f5f5);
  --checkbox_size: var(--kup-checkbox_size, 20px);
  --checkbox_tick-color: var(--kup-checkbox_tick-color, #4e908f);
  --checkbox_tick-color-disabled: var(--kup-checkbox_tick-color-disabled, #86bebd);
  display: inline-block;
}

/**
 * IMPORTANT: inside this component, when a comment starts with NR, it stands for Normal Ratio.
 * The NR: <value> means that when the variable --checkbox_size is set to 20px,
 * the value of that property is <value>px.
 */
.kup-checkbox {
  border: calc(var(--checkbox_size) / 10) solid var(--checkbox_border-color);
  border-radius: calc(var(--checkbox_size) / 10);
  background: var(--checkbox_background-color);
  display: inline-block;
  height: var(--checkbox_size);
  position: relative;
  width: var(--checkbox_size);
  z-index: 0;
}
.kup-checkbox > input {
  cursor: pointer;
  height: 100%;
  left: 0;
  margin: 0;
  opacity: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 2;
}
.kup-checkbox > input:checked ~ .kup-checkbox__check {
  border-bottom-color: var(--checkbox_tick-color);
  border-right-color: var(--checkbox_tick-color);
  margin-left: calc(var(--checkbox_size) / 5 * 2);
  margin-top: calc(var(--checkbox_size) / 4);
  transform: rotate(45deg) scale(1.7);
  transition: all 0.2s ease 0s;
}
.kup-checkbox .kup-checkbox__check {
  border-bottom: calc(var(--checkbox_size) / 10) solid transparent;
  border-right: calc(var(--checkbox_size) / 10) solid transparent;
  box-sizing: border-box;
  display: block;
  height: calc(var(--checkbox_size) / 5 * 2 - var(--checkbox_size) / 20);
  position: relative;
  transform: rotate(0deg) scale(1);
  transition: all 0.2s ease 0s;
  width: calc(var(--checkbox_size) / 5);
}
:host([disabled]) .kup-checkbox {
  border-color: var(--checkbox_border-color-disabled);
}
:host([disabled]) .kup-checkbox > input {
  cursor: initial;
}
:host([disabled]) .kup-checkbox > input:checked ~ .kup-checkbox__check {
  border-bottom-color: var(--checkbox_tick-color-disabled);
  border-right-color: var(--checkbox_tick-color-disabled);
}